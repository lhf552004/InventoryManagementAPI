name: Build and Push Docker Image

on:
  push:
    branches:
      - main
      - dev
      - test
  pull_request:
    branches:
      - main
      - dev
      - test

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout the repository code
      - name: Checkout Code
        uses: actions/checkout@v3

      # Step 2: Configure AWS Credentials
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-west-2 # Replace with your ECR region

      # Step 3: Log in to Amazon ECR
      - name: Log in to Amazon ECR
        uses: aws-actions/amazon-ecr-login@v2

      # Step 4: Build the Docker Image
      - name: Build Docker Image
        run: docker build -t 847837762102.dkr.ecr.us-west-2.amazonaws.com/dotnet-api:${{ github.sha }} .

      # Step 5: Push the Docker Image to Amazon ECR
      - name: Push Docker Image
        run: docker push 847837762102.dkr.ecr.us-west-2.amazonaws.com/dotnet-api:${{ github.sha }}
  deploy-lambda:
    name: Update Lambda Function
    runs-on: ubuntu-latest
    needs: build-and-push

    steps:
      # Step 1: Checkout Terraform Code
      - name: Checkout Code
        uses: actions/checkout@v3
        with:
          repository: lhf552004/Inventory-lambda-deployment
          token: ${{ secrets.REPO_ACCESS_TOKEN }}
      
      # Step 2: Set Environment Variables Based on Branch
      - name: Determine Environment
        id: determine_env
        run: |
          if [ "${{ github.ref_name }}" == "main" ]; then
            echo "BACKEND_FILE=backend-prod.hcl" >> $GITHUB_ENV
            echo "TFVARS_FILE=env/prod.tfvars" >> $GITHUB_ENV
          elif [ "${{ github.ref_name }}" == "dev" ]; then
            echo "BACKEND_FILE=backend-dev.hcl" >> $GITHUB_ENV
            echo "TFVARS_FILE=env/dev.tfvars" >> $GITHUB_ENV
          elif [ "${{ github.ref_name }}" == "test" ]; then
            echo "BACKEND_FILE=backend-test.hcl" >> $GITHUB_ENV
            echo "TFVARS_FILE=env/test.tfvars" >> $GITHUB_ENV
          else
            echo "Branch not recognized. Exiting."
            exit 1
          fi

      # Step 3: Configure AWS Credentials
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-west-2 # Replace with your ECR region

      # Step 4: Setup Terraform
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.5.0
      
      # Step 5: Install provider plugin
      - name: Terraform Init
        run: terraform init -backend-config=${{ env.BACKEND_FILE }}

      # Step 6: Run Terraform Apply
      - name: Deploy Lambda
        run: terraform apply -auto-approve -var-file=${{ env.TFVARS_FILE }} -var "image_tag=${{ github.sha }}"
      
      # Step 7 Clean cache
      - name: Clean Terraform Cache
        run: rm -rf .terraform .terraform.lock.hcl